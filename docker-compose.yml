services:
  # This is the Nginx container that acts as a reverse proxy
  nginx_rvproxy:
    container_name: KF_nginx
    image: kartflip/nginx_rvproxy
    build:
      context: ./_containers/nginx
      dockerfile: Dockerfile.nginx
    depends_on:
    - django_daphne
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - static_volume:/var/www/static
      - media_volume:/var/www/media
    ports:
      - "6000:80"
    networks:
      - frontend_network
    restart: on-failure:3

  # This is the Daphne server which serves our Django application using ASGI (async & websockets)
  django_daphne:
    container_name: KF_daphne
    image: kartflip/django_daphne
    build:
      context: ./_containers/django
      dockerfile: Dockerfile.django_daphne
    command: daphne -b 0.0.0.0 -p 8000 cartflip.asgi:application
    depends_on:
      - postgresql
      - redis_tasks
    volumes:
      - .:/app
      - static_volume:/app/static
      - media_volume:/app/media
    ports:
      - "8000:8000"
    environment:
      - DEBUG=1
      - DATABASE_URL=postgresql://cartflip_user:cartflip_password@postgresql:5432/cartflip
      - REDIS_URL=redis://redis_tasks:6379/0
    networks:
      - frontend_network
      - backend_network
    restart: on-failure:3

  # This is our PostgreSQL container that acts as our primary data store aka Database
  postgresql:
    container_name: KF_postgresql
    image: kartflip/postgresql
    build:
      context: ./_containers/postgresql
      dockerfile: Dockerfile.postgresql
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: cartflip
      POSTGRES_USER: cartflip_user
      POSTGRES_PASSWORD: cartflip_password
    networks:
      - backend_network
    restart: on-failure:3

  # This is the Celery worker & scheduler container for handling tasks
  celery_tasks:
    container_name: KF_celery
    image: kartflip/celery_tasks
    build:
      context: ./_containers/tasks
      dockerfile: Dockerfile.tasks
    command: celery -A cartflip worker --loglevel=info
    depends_on:
      - postgresql
      - redis_tasks
    volumes:
      - .:/app
    environment:
      - DEBUG=1
      - DATABASE_URL=postgresql://cartflip_user:cartflip_password@postgresql:5432/cartflip
      - REDIS_URL=redis://redis_tasks:6379/0
    networks:
      - backend_network
      - tasks_network
    restart: on-failure:3

  # This is our Redis container that acts as a message broker for Celery tasks
  redis_tasks:
    container_name: KF_redis
    image: kartflip/redis_tasks
    build:
      context: ./_containers/tasks
      dockerfile: Dockerfile.redis_tasks
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - tasks_network
    restart: on-failure:3

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume:

networks:
  frontend_network:
    driver: bridge
  backend_network:
    driver: bridge
  tasks_network:
    driver: bridge
