"""
Django settings for kartflip project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

# Core python imports
from pathlib import Path

# Helper functions imports
from .utils_project import get_secret, get_env

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-u62s_132xr*@dosn(p1$hwf72@!l4kk^fy!rthor8#qjd(7x)o'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # My Custom Apps
    'mainapp',

    # Required for extra postgresql functionality
    'django.contrib.postgres',

    # Required for Django core functionality
    'allauth',
    'allauth.account',

    # Additionally required for Django allauth usersessions functionality
    'django.contrib.humanize',
    'allauth.usersessions',

    # Apps related to Tasks(Celery)
    'django_celery_results', # For storing task results in Django DB
    'django_celery_beat', # For storing and managing periodic tasks in Django DB
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware', # Required for Django i18n functionality. Not added by default
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    # Required for Django allauth core functionality
    'allauth.account.middleware.AccountMiddleware',

    # Required for Django allauth usersessions functionality
    'allauth.usersessions.middleware.UserSessionsMiddleware',
]

ROOT_URLCONF = 'kartflip.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / "templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# Required for Django allauth core functionality
AUTHENTICATION_BACKENDS = [

    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',

    # `allauth` specific authentication methods, such as login by email
    'allauth.account.auth_backends.AuthenticationBackend', 
]

WSGI_APPLICATION = 'kartflip.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# Url for static files
STATIC_URL = 'static/'

# Location in app directory where static files are collected when the `collectstatic` command is run
STATIC_ROOT = BASE_DIR / 'staticfiles'

# Additional locations of static files (where collectstatic looks)
STATICFILES_DIRS = [
    BASE_DIR / 'staticfiles_source',
]

# Media files (public, user uploaded files like logos, etc)
# Url for media files
MEDIA_URL = 'media/'

# Location in app directory where media files are stored
MEDIA_ROOT = BASE_DIR / 'mediafiles'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# General Celery settings
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_TIMEZONE = TIME_ZONE # Uses the TIME_ZONE variable defined above
CELERY_TASK_TRACK_STARTED = True # Track task start times

# Celery Result settings 
CELERY_RESULT_BACKEND = 'django-db' # Set which ORM to use here
CELERY_RESULT_SERIALIZER = 'json' # Set which serializer to use for results
CELERY_RESULT_EXTENDED = True # Set this to TRUE for storing extra metadata
CELERY_RESULT_EXPIRES = None # Keep results indefinitely for audit purposes